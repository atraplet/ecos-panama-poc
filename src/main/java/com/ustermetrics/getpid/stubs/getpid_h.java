// Generated by jextract

package com.ustermetrics.getpid.stubs;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public class getpid_h  {

    static {
    }

    static final SymbolLookup LIBRARIES = RuntimeHelper.lookup();    /* package-private */ getpid_h() {}
    public static MethodHandle _getpid$MH() {
        return RuntimeHelper.requireNonNull(constants$0._getpid$MH,"_getpid");
    }
    public static int _getpid (Object... x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$0._getpid$MH, "_getpid");
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpid$MH() {
        return RuntimeHelper.requireNonNull(constants$0.getpid$MH,"getpid");
    }
    public static int getpid (Object... x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.getpid$MH, "getpid");
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


